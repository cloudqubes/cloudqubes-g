{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-js-content-file-path-pages-contat-mdx-c777712f4b79b2ea89d8.js","mappings":"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","sources":["webpack://cloudqubes/./pages/contat.mdx","webpack://cloudqubes/./src/pages/blog/{mdx.frontmatter__slug}.js","webpack://cloudqubes/./src/components/layout.module.css","webpack://cloudqubes/./src/components/layout.js","webpack://cloudqubes/./src/hooks/use-site-metadata.jsx","webpack://cloudqubes/./src/components/seo.js","webpack://cloudqubes/./src/pages/blog/article.module.css","webpack://cloudqubes/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"I am a writer, blogger, and a DevOps practitioner.\\nI write on Cloud computing, Kubernetes, CI/CD, DevOps, MLOps, AIOps.\"), \"\\n\", React.createElement(_components.p, null, \"Contact me on twitter \", React.createElement(_components.a, {\n    href: \"https://twitter.com/cloudqubes\"\n  }, \"@cloudqubes\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Email: Cloudqubes [at] gmail.com. (Replace at with @)\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/indika/projects/cloudqubes/gatsby/cloudqubes/pages/contat.mdx\";\nimport * as React from 'react';\nimport {graphql} from \"gatsby\";\nimport Layout from '../../components/layout';\nimport {Seo} from \"../../components/seo\";\nimport {outerContainer, container, title, postMeta} from \"./article.module.css\";\nimport \"./article.css\";\nconst BlogPost = ({data, children}) => {\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, React.createElement(\"div\", {\n    className: outerContainer\n  }, React.createElement(\"article\", {\n    className: container\n  }, React.createElement(\"div\", null, React.createElement(\"span\", {\n    className: postMeta\n  }, data.mdx.frontmatter.date, \" - \"), React.createElement(\"span\", {\n    className: postMeta\n  }, data.mdx.fields.timeToRead.text)), React.createElement(\"h1\", {\n    className: title\n  }, data.mdx.frontmatter.title), children)));\n};\nexport const query = graphql`\n  query ($id: String) {\n    mdx(id: {eq: $id}) {\n      frontmatter {\n        title\n        description\n        tags\n        date(formatString: \"MMMM D, YYYY\")\n      }\n      fields{\n        timeToRead {\n          minutes\n          text\n          time\n          words\n        }\n      }\n    }\n  }\n`;\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.title,\n  description: data.mdx.frontmatter.description\n});\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","// extracted by mini-css-extract-plugin\nexport var footer = \"layout-module--footer--ad7d0\";\nexport var footerAbout = \"layout-module--footerAbout--6e9dd\";\nexport var footerCard = \"layout-module--footerCard--8fc61\";\nexport var footerLogo = \"layout-module--footerLogo--cd38c\";\nexport var footerLogoContainer = \"layout-module--footerLogoContainer--67598\";\nexport var footerLogoText = \"layout-module--footerLogoText--58444\";\nexport var innerContainer = \"layout-module--inner-container--df4cb\";\nexport var logo = \"layout-module--logo--ff776\";\nexport var logoContainer = \"layout-module--logo-container--6ca7c\";\nexport var logoText = \"layout-module--logo-text--e7423\";\nexport var mainHeader = \"layout-module--main-header--0975f\";\nexport var navContainer = \"layout-module--nav-container--96fe9\";\nexport var navItem = \"layout-module--nav-item--3670c\";\nexport var navItemList = \"layout-module--nav-item-list--aaad3\";\nexport var socialMediaIcons = \"layout-module--socialMediaIcons--19ec3\";\nexport var socialMediaLink = \"layout-module--socialMediaLink--69be6\";\nexport var socialMediaLogo = \"layout-module--socialMediaLogo--1fd87\";","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { mainHeader,\n          innerContainer,\n          navItemList,\n          navItem,\n          logo,\n          logoText,\n          logoContainer,\n          navContainer,\n          footer,\n          footerCard, footerLogoContainer, footerLogo, footerLogoText, footerAbout,\n          socialMediaLogo, socialMediaIcons, socialMediaLink\n } from \"./layout.module.css\";\nimport \"./layout.css\";\n\nconst Layout = ({ pageTitle, children }) => {\n  return (\n    <div>\n      <header className={mainHeader} >\n        <div className={innerContainer}>\n          <div className={logoContainer}>\n            <Link to=\"/\">\n              <StaticImage \n                alt=\"cloudqubes logo\"\n                src=\"../images/logo_v1.png\"\n                className={logo}\n              />\n            </Link>\n            <Link to=\"/\">\n              <h1 className={logoText}>cloudqubes</h1>\n            </Link>\n          </div>\n          <nav className={navContainer}>\n            <ul className={navItemList}>\n              <li className={navItem}><Link to=\"/about\">About</Link></li>\n              <li className={navItem}><Link to=\"/blog\">Blog</Link></li>\n              <li className={navItem}><Link to=\"/contact\">Contact</Link></li>\n              <li className={navItem}><Link to=\"https://cloudqubes.substack.com/\">Newsletter</Link></li>\n            </ul>\n          </nav>\n        </div>\n\n      </header>\n      <main>\n        {children}\n      </main>\n      <footer className={footer}>\n        <div className={innerContainer}>\n          <div className={footerCard}>\n            <div className={footerLogoContainer}>\n              <Link to=\"/\" >\n                <StaticImage \n                  alt=\"cloudqubes logo\"\n                  src=\"../images/logo_v1.png\"\n                  className={footerLogo}\n                />\n              </Link>\n              <Link to=\"/\">\n                <h1 className={footerLogoText}>cloudqubes</h1>\n              </Link>\n            </div>\n            <div>\n              <Link to=\"/about\" className={footerAbout}>\n                About\n              </Link>\n            </div>\n          </div>\n          <div className={footerCard}>\n            <div className={socialMediaIcons}>\n              <Link to=\"https://github.com/cloudqubes\" className={socialMediaLink}>\n                <StaticImage \n                  alt=\"cloudqubes logo\"\n                  src=\"../images/github-mark.png\"\n                  className={socialMediaLogo}\n                />\n              </Link>\n\n              <Link to=\"https://twitter.com/cloudqubes\" className={socialMediaLink}>\n                <StaticImage \n                  alt=\"cloudqubes logo\"\n                  src=\"../images/logo-black.png\"\n                  className={socialMediaLogo}\n                />\n              </Link>\n            </div>\n          </div>\n        </div>\n\n      </footer>\n    </div>\n  )\n}\n\nexport const Head = () => {\n  return\n}\n\nexport default Layout\n\n\n","import { graphql, useStaticQuery } from \"gatsby\"\n\nexport const useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          twitterUsername\n          image\n          siteUrl\n        }\n      }\n    }\n  `)\n\n  return data.site.siteMetadata\n}\n","import React from \"react\";\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\";\n\nexport const Seo = ({ title, description, pathname, children }) => {\n  const {title: defaultTitle, description: defaultDescription, image, siteUrl, twitterUsername} = useSiteMetadata()\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    image: `${siteUrl}${image}`,\n    url: `${siteUrl}${pathname || ''}`,\n    twitterUsername,\n  }\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description}/>\n      <meta name=\"image\" content={seo.image} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:creator\" content={seo.twitterUsername} />\n      <link rel=\"icon\" href=\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='0.9em' font-size='90'>👤</text></svg>\" />\n      {children}\n\n    </>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport var container = \"article-module--container--2d8cc\";\nexport var outerContainer = \"article-module--outerContainer--119e3\";\nexport var postMeta = \"article-module--post-meta--34964\";\nexport var title = \"article-module--title--f5d32\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","_provideComponents","components","React","href","wrapper","MDXLayout","BlogPost","_ref","data","children","Layout","pageTitle","mdx","frontmatter","title","className","outerContainer","container","postMeta","date","fields","timeToRead","text","Head","_ref2","Seo","description","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","footerCard","innerContainer","navItem","socialMediaLink","socialMediaLogo","Link","to","S","alt","src","pathname","defaultTitle","defaultDescription","image","siteUrl","twitterUsername","useStaticQuery","site","siteMetadata","seo","url","name","content","rel","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}