{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-js-content-file-path-blog-docker-cli-quick-reference-index-mdx-c994075bab761847891f.js","mappings":"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","sources":["webpack://cloudqubes/./blog/docker-cli-quick-reference/index.mdx","webpack://cloudqubes/./src/pages/blog/{mdx.frontmatter__slug}.js","webpack://cloudqubes/./src/hooks/use-site-metadata.jsx","webpack://cloudqubes/./src/components/seo.js","webpack://cloudqubes/./src/pages/blog/article.module.css","webpack://cloudqubes/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h1: \"h1\",\n    h3: \"h3\",\n    pre: \"pre\",\n    code: \"code\",\n    a: \"a\",\n    h2: \"h2\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    class: \"header-highlight\"\n  }, React.createElement(_components.p, null, \"A quick reference of commonly used docker commands.\")), \"\\n\", React.createElement(_components.h1, null, \"The top five\"), \"\\n\", React.createElement(_components.h3, null, \"Pull container image from Docker Hub\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker pull <image-name>:latest\\n\")), \"\\n\", React.createElement(_components.p, null, \"This pulls the latest version of the image from \", React.createElement(_components.a, {\n    href: \"https://hub.docker.com\"\n  }, \"Docker Hub\"), \".\"), \"\\n\", React.createElement(_components.h3, null, \"Build container image\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker build .\\n\")), \"\\n\", React.createElement(_components.p, null, \"The \", React.createElement(_components.code, null, \"Dockerfile\"), \" must exist in the path from where you are running this command.\"), \"\\n\", React.createElement(_components.h3, null, \"List container images\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker image ls\\n\")), \"\\n\", React.createElement(_components.h3, null, \"Run container\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker run <image-name>:<tag>\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"docker run\"), \" is an alias for \", React.createElement(_components.code, null, \"docke container run\"), \".\"), \"\\n\", React.createElement(_components.h3, null, \"List running containers\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker conatiner ls\\n\")), \"\\n\", React.createElement(_components.h1, null, \"Manage container images\"), \"\\n\", React.createElement(_components.h3, null, \"Pull specific version of a container image from docker hub\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker pull <image>:<tag>\\n\")), \"\\n\", React.createElement(_components.h3, null, \"List all images\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker image ls\\n\")), \"\\n\", React.createElement(_components.h3, null, \"Build image with name and tag\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker build -t <image-name>:<tag> .\\n\")), \"\\n\", React.createElement(_components.p, null, \"The \", React.createElement(_components.code, null, \"Dockerfile\"), \" must exist in the path from where you are running this command.\"), \"\\n\", React.createElement(_components.h2, null, \"Build container image for x86 from M1 Macbook\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker buildx build --platform linux/amd64 .\\n\")), \"\\n\", React.createElement(_components.p, null, \"The \", React.createElement(_components.code, null, \"Dockerfile\"), \" must exist in the path from where you are running this command.\"), \"\\n\", React.createElement(_components.p, null, \"Check Buildx availability in your Docker CLI\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker buildx version\\n\")), \"\\n\", React.createElement(_components.p, null, \"The Buildx plugin is included in Docker Desktop on Windows, Mac, and Linux (if installed from a DEB or RPM package). If you are on any of the above platforms and if Buildx is still not available, try updating Docker to the latest version.\"), \"\\n\", React.createElement(_components.p, null, \"Or install Buildx manually by following \", React.createElement(_components.a, {\n    href: \"https://github.com/docker/buildx#installing\"\n  }, \"the instructions here\"), \".\"), \"\\n\", React.createElement(_components.h3, null, \"Push image to Docker Hub\"), \"\\n\", React.createElement(_components.p, null, \"Before pushing an image to Docker Hub, you must \", React.createElement(_components.a, {\n    href: \"https://docs.docker.com/docker-hub/repos/create/\"\n  }, \"create a Docker Hub repository\"), \".\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"docker tag <image-name>:<tag> <docker-hub-username>/<repo-name>:<tag>\\ndocker push <docker-hub-username>/<repo-name>:<tag>\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"image-name\"), \" and \", React.createElement(_components.code, null, \"tag\"), \" could be any image that you have built locally with \", React.createElement(_components.code, null, \"docker build\"), \".\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"docker-hub-username\"), \" is your username at Docker Hub.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"repo-name\"), \" is the name of the repository that you have created at Docker Hub.\"), \"\\n\", React.createElement(_components.h3, null, \"Verify image architecture\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker image inspect <image-id> | grep -i architecture\\n\")), \"\\n\", React.createElement(_components.h3, null, \"Delete image\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker image rm <image-id>\\n\")), \"\\n\", React.createElement(_components.h1, null, \"Manage containers\"), \"\\n\", React.createElement(_components.h3, null, \"Run container\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker run <image-name>:<tag>\\n\")), \"\\n\", React.createElement(_components.p, null, \"Or\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"docker container run <image-name>:<tag>\\n\")), \"\\n\", React.createElement(_components.p, null, \"This runs the container in a interactive session. (The shell does not return).\\nRun in the \", React.createElement(_components.code, null, \"detached\"), \" mode for the shell to return.\"), \"\\n\", React.createElement(_components.h3, null, \"Run container in detached mode\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker run -d <image-name>:<tag>\\n\")), \"\\n\", React.createElement(_components.p, null, \"Or\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker container run -d <image-name>:<tag>\\n\")), \"\\n\", React.createElement(_components.h3, null, \"Publish container port to localhost port\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker run -p <localhost port>:<container-port> <image-name>:<tag>\\n\")), \"\\n\", React.createElement(_components.p, null, \"The host will forward all traffic destined to \", React.createElement(_components.code, null, \"localhost-port\"), \" to the \", React.createElement(_components.code, null, \"container-port\"), \" in the running container.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Example\"), \":\"), \"\\n\", React.createElement(_components.p, null, \"We are running NGNIX web server on port 8080 in the container.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker run -p 80:8080 nginx\\n\")), \"\\n\", React.createElement(_components.p, null, \"Now, we can reach the HTTP server running in port 8080 on \", React.createElement(_components.code, null, \"nginx\"), \" via:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"curl http://127.0.0.1/xyz...\\n\")), \"\\n\", React.createElement(_components.h3, null, \"List running containers\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker container ls\\n\")), \"\\n\", React.createElement(_components.h3, null, \"Stop container\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"docker container stop <container-id>\\n\")), \"\\n\", React.createElement(_components.h3, null, \"Delete container\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker container rm <container-id>\\n\")), \"\\n\", React.createElement(_components.p, null, \"You must stop the container before deleting.\"), \"\\n\", React.createElement(_components.h3, null, \"List all containers (including stopped)\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker container ls --all\\n\")), \"\\n\", React.createElement(_components.h3, null, \"List running containers where name contains a specific string\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker container ls -f \\\"name=squid\\\"\\n\")), \"\\n\", React.createElement(_components.h3, null, \"List all containers where name contains a specific string\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker container ls -f \\\"name=squid\\\" --all\\n\")), \"\\n\", React.createElement(_components.h1, null, \"Getting help\"), \"\\n\", React.createElement(_components.p, null, \"Get help about all available commands.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker --help\\n\")), \"\\n\", React.createElement(_components.p, null, \"Get specific details about a command.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker <command> --help\\n\")), \"\\n\", React.createElement(_components.p, null, \"Example: Getting help for \", React.createElement(_components.code, null, \"container\"), \" command.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker container --help\\n\")), \"\\n\", React.createElement(_components.p, null, \"Example: Getting help for \", React.createElement(_components.code, null, \"container ls\"), \" command.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker container ls --help\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/indika/projects/cloudqubes/gatsby/cloudqubes/blog/docker-cli-quick-reference/index.mdx\";\nimport * as React from 'react';\nimport {graphql} from \"gatsby\";\nimport Layout from '../../components/layout';\nimport {Seo} from \"../../components/seo\";\nimport {outerContainer, container, title, postMeta} from \"./article.module.css\";\nimport \"./article.css\";\nconst BlogPost = ({data, children}) => {\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, React.createElement(\"div\", {\n    className: outerContainer\n  }, React.createElement(\"article\", {\n    className: container\n  }, React.createElement(\"div\", null, React.createElement(\"span\", {\n    className: postMeta\n  }, data.mdx.frontmatter.date, \" - \"), React.createElement(\"span\", {\n    className: postMeta\n  }, data.mdx.fields.timeToRead.text)), React.createElement(\"h1\", {\n    className: title\n  }, data.mdx.frontmatter.title), children)));\n};\nexport const query = graphql`\n  query ($id: String) {\n    mdx(id: {eq: $id}) {\n      frontmatter {\n        title\n        description\n        tags\n        date(formatString: \"MMMM D, YYYY\")\n      }\n      fields{\n        timeToRead {\n          minutes\n          text\n          time\n          words\n        }\n      }\n    }\n  }\n`;\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.title,\n  description: data.mdx.frontmatter.description\n});\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import { graphql, useStaticQuery } from \"gatsby\"\n\nexport const useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          twitterUsername\n          image\n          siteUrl\n        }\n      }\n    }\n  `)\n\n  return data.site.siteMetadata\n}\n","import React from \"react\";\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\";\n\nexport const Seo = ({ title, description, pathname, children }) => {\n  const {title: defaultTitle, description: defaultDescription, image, siteUrl, twitterUsername} = useSiteMetadata()\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    image: `${siteUrl}${image}`,\n    url: `${siteUrl}${pathname || ''}`,\n    twitterUsername,\n  }\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description}/>\n      <meta name=\"image\" content={seo.image} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:creator\" content={seo.twitterUsername} />\n      <link rel=\"icon\" href=\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='0.9em' font-size='90'>👤</text></svg>\" />\n      {children}\n\n    </>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport var container = \"article-module--container--2d8cc\";\nexport var outerContainer = \"article-module--outerContainer--119e3\";\nexport var postMeta = \"article-module--post-meta--34964\";\nexport var title = \"article-module--title--f5d32\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h1","h3","pre","code","a","h2","strong","_provideComponents","components","React","class","className","href","wrapper","MDXLayout","BlogPost","_ref","data","children","Layout","pageTitle","mdx","frontmatter","title","outerContainer","container","postMeta","date","fields","timeToRead","text","Head","_ref2","Seo","description","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","pathname","defaultTitle","defaultDescription","image","siteUrl","twitterUsername","useStaticQuery","site","siteMetadata","seo","url","name","content","rel","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}